// Auto-generated code. Do not edit.
namespace myTiles {
    //% fixedInstance jres blockIdentity=images._tile
    export const transparency16 = image.ofBuffer(hex``);

    helpers._registerFactory("tilemap", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "level1":
            case "level1":return tiles.createTilemap(hex`1000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level2":
            case "level2":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16,sprites.vehicle.roadVertical,sprites.dungeon.hazardLava0,sprites.dungeon.hazardLava1], TileScale.Sixteen);
            case "level3":
            case "level3":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level4":
            case "level4":return tiles.createTilemap(hex``, img`
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 . . . . . . . . . . . . . . 2 
2 . 2 . . . 2 . . . . . . . . 2 
2 . 2 . . . 2 . . . 2 . . . . 2 
2 . . . . . . . . . 2 . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . 2 . . . . . . . . 2 . . 2 
2 . . 2 . . . . . . . . 2 . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . 2 . . . . 2 
2 . . . 2 . . . . . 2 . . . . 2 
2 . . . 2 . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 2 2 2 2 2 2 . . 2 2 2 2 2 2 2 
`, [myTiles.transparency16,sprites.builtin.forestTiles0,sprites.castle.tilePath5,sprites.dungeon.stairLadder,sprites.dungeon.stairNorth], TileScale.Sixteen);
            case "level5":
            case "level5":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level7":
            case "level7":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level8":
            case "level8":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level9":
            case "level9":return tiles.createTilemap(hex``, img`
2 2 2 2 2 . 2 2 2 2 2 2 2 2 2 2 
2 . 2 2 2 . 2 2 2 2 2 . 2 2 2 2 
2 . . . 2 . . . . . 2 . . . . 2 
2 . 2 2 2 . 2 2 2 2 2 . 2 2 2 2 
2 . . . . . . . . . 2 . . . . 2 
2 . 2 2 2 . 2 2 2 2 2 . 2 2 2 2 
2 . . . 2 . . . . . 2 . . . . 2 
2 . 2 2 2 . 2 2 2 2 2 . 2 2 2 2 
2 . . . 2 . . . . . . . . . . 2 
2 . 2 2 2 . 2 2 2 2 2 . 2 2 2 2 
2 . . . 2 . . . . . 2 . . . . 2 
2 . 2 2 2 . 2 2 2 2 2 . 2 2 2 2 
2 . . . 2 . . . . . 2 . . . . 2 
2 . 2 2 2 . 2 2 2 2 2 . 2 2 2 2 
2 . . . 2 . . . . 2 2 . . . . 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.transparency16,sprites.dungeon.floorLight1,sprites.dungeon.stairLarge,sprites.dungeon.floorLight2,sprites.dungeon.floorLight4], TileScale.Sixteen);
            case "level6":
            case "level6":return tiles.createTilemap(hex``, img`
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 . . . . . . 2 2 2 2 . 2 2 . . 
2 . 2 2 . 2 . 2 . . . . . 2 . 2 
2 . 2 2 . 2 2 2 2 . 2 . . . . 2 
2 . 2 2 2 2 . . 2 . 2 . 2 2 . 2 
2 . 2 2 . . . . 2 . 2 2 2 . . 2 
2 . . . . 2 2 . . . . . 2 2 . 2 
2 . 2 2 2 2 2 . 2 . 2 . . . . 2 
2 . 2 2 . 2 2 . 2 2 2 . 2 2 2 2 
2 . 2 . . 2 . . . . 2 . 2 . . 2 
2 . 2 . 2 2 . 2 2 2 2 . 2 . 2 2 
2 . . . . . . 2 . . . . 2 . 2 2 
2 2 . 2 2 2 . 2 2 2 2 . 2 . 2 2 
2 . . 2 . 2 . . . . . . . . . 2 
2 2 2 2 . 2 2 2 . 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.transparency16,sprites.dungeon.darkGroundNorthWest1,sprites.dungeon.darkGroundCenter,sprites.dungeon.collectibleRedCrystal,sprites.dungeon.stairEast,sprites.dungeon.chestClosed], TileScale.Sixteen);
            case "level10":
            case "level10":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level11":
            case "level11":return tiles.createTilemap(hex``, img`
2 2 2 2 2 . 2 2 2 2 2 2 2 2 2 2 
2 . 2 . 2 . . . 2 2 2 2 2 2 2 2 
2 . 2 . 2 . 2 . . . . . . . . 2 
2 . 2 . 2 . 2 . 2 2 2 2 2 2 . 2 
2 . . . 2 . 2 2 2 2 . . . 2 . 2 
2 . 2 2 2 . 2 . 2 2 . 2 . 2 . 2 
2 . . . . . 2 . . 2 . 2 . . . 2 
2 . 2 2 2 2 2 2 . . . 2 2 2 . 2 
2 . 2 2 2 2 . 2 2 2 . . . . . 2 
2 . . . . . . 2 . 2 . . . 2 . 2 
2 2 2 . 2 . . 2 . 2 2 2 . 2 . 2 
2 2 . . 2 . . 2 . . . . . 2 2 2 
2 . . 2 2 2 . 2 2 2 2 2 . . . 2 
2 . 2 2 . . . . . . . . . . . 2 
2 . . . . 2 2 2 . 2 2 2 2 2 . 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.transparency16,sprites.dungeon.floorDark2,sprites.dungeon.floorDark5], TileScale.Sixteen);
        }
        return null;
    })

    helpers._registerFactory("tile", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "transparency16":return transparency16;
        }
        return null;
    })

}
// Auto-generated code. Do not edit.
